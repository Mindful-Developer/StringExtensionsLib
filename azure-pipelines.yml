# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: my-local-agent-pool  # DESKTOP-LLBGN4R

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  projectPath: 'StringExtensionsLib/StringExtensionsLib.csproj'
  buildPlatform: 'Any CPU'
  packageVersion: '1.0.$(Build.BuildId)'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: '$(projectPath)'
    packDirectory: '$(Build.ArtifactStagingDirectory)/nuget'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'
    nobuild: true
    includeSymbols: true # Optional: include debug symbols
    includeSource: true  # Optional: include source code

- task: NuGetCommand@2
  displayName: 'Push NuGet package to Azure Artifacts'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/nuget/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/nuget/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'CSharpStringExtensionLib/MyPublicPackages'
    allowPackageConflicts: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Pipeline Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
